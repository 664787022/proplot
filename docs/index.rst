.. proplot documentation master file, created by
   sphinx-quickstart on Wed Feb 20 01:31:20 2019.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

=======
ProPlot
=======

An `object-oriented <https://matplotlib.org/api/api_overview.html>`__ `matplotlib <https://matplotlib.org/>`__ wrapper
that can help you make beautiful, publication-quality graphics.
The Github page is `here <https://github.com/lukelbd/proplot>`__.

Installation
============

This package is a work-in-progress -- currently, there is no formal release
on PyPi (but it's coming soon!). For the time being, you may install directly from Github using:

.. code-block:: bash

   pip install git+https://github.com/lukelbd/proplot.git#egg=proplot

The dependencies are `matplotlib <https://matplotlib.org/>`_ and `numpy <http://www.numpy.org/>`_.  The optional geographic mapping features require `cartopy <https://scitools.org.uk/cartopy/docs/latest/>`_ and/or `basemap <https://matplotlib.org/basemap/index.html>`_.

I recommend importing with

.. code-block:: python

   import proplot as plot

to differentiate ProPlot from the usual "``plt``" abbreviation used for the `~matplotlib.pyplot` module.

Overview
========

Importing ProPlot registers a bunch of new colormaps and color names.
If this is all you want and you don't care about other features, simply
import ProPlot at the top of your script. See `~proplot.colortools` for details, and the :ref:`Table of colormaps`, :ref:`Table of color cycles`, and :ref:`Table of colors`.

Most of ProPlot's features derive from the `~proplot.subplots.subplots` command, inspired
by the pyplot `~matplotlib.pyplot.subplots` command.
This generates a scaffolding of specially subclassed axes, and has a bunch of other useful features.

The next most important utility is the `~proplot.axes.BaseAxes.format` method, available
on every axes generated by `~proplot.subplots.subplots`.
This method calls ``smart_update`` on various axes types,
and can be used to fine-tune your axis properties, titles, labels, limits, and much more.

Here are some highlights of the remaining features:

*  A smarter "tight layout" feature. Figure width or height alternately
   scales so that subplot **aspect ratios** are fixed, inner space
   between subplots automatically scaled so subplot tick labels, etc. do
   not overlap with each other.
*  Easy setting customization with a user ``.proplotrc`` file. Option
   to save custom colormaps, and they will be loaded every time on startup.
*  Axes panels and figure panels, for global colorbars, global legends,
   or tertiary data. Panel widths always held fixed during "tight layout"
   scaling.
*  Specify figure, axes, panel, etc. sizes with arbitrary physical units --
   not just inches or "relative" units.
*  Perceptually distinct named colors with easy-to-remember names,
   a ton of beautiful new colormaps, new property cycle colors.
*  Tools for merging existing colormaps and making new "perceptually
   uniform" colormaps on-the-fly. Tools for slicing and modifying existing
   colormaps.
*  Making colorbars from lists of lines
   or colors. Making axes "inset" colorbars. Making legends with centered
   rows instead of aligned columns.
*  Integration with basemap and cartopy. Generate arbitrary
   grids of arbitrary map projections in one go. Switch between the cartopy and
   basemap backends painlessly. Use the axes methods directly for basemap
   plotting, instead of the ``Basemap`` object.
*  Add geographic features with the ``format`` command.
   Customize geographic gridlines and gridline labels.

To get started, check out the :ref:`Introduction`.

.. Hopefully, you will find this API to be less verbose and
.. more powerful than the builtin matplotlib API.
.. This is just so top-level headers in the showcase.rst
   file appear as *subsections* in the documentation to
   a parent 'showcase' section.
.. Below replaces traditional autodoc invocation with
   .. automodule:: mods.set.tests
      :members:
      :show-inheritance:
   Use 'sphinx-apidoc ../proplot -o .' to auto-generate modules.rst

Contributions
=============
This entire package has so far been written by just `me <https://github.com/lukelbd>`__ -- but I have a day job as a graduate student. If you have any ideas for new features or come across any bugs, I'd love to receive a pull request! You shouldn't have much trouble modifying it -- the comments and documentation are fairly comprehensive.

Shout out to `bradyrx <https://github.com/bradyrx>`__ for being the
guinea pig and helping me fix a lot of the initial bugs. If your field is
atmospheric science, check out his awesome
`decadal climate prediction package <https://github.com/bradyrx/climpred>`_.

Donations
=========

At well over 10,000 lines of code, this package took a huge amount of time to write and document. If ProPlot has been useful for you, consider sending me a small donation.

.. image:: https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif
   :target: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=5SP6S8RZCYMQA&source=url


.. toctree::
   :hidden:
   :maxdepth: 4
   :caption: Contents

   tutorial
   documentation


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
